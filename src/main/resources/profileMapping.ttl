  @prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix carml: <http://carml.taxonic.com/carml/> .
@prefix model: <http://localhost/socialNetwork/model#>. 
@prefix dc: <http://purl.org/dc/elements/1.1/>.  
@prefix ns: <http://www.w3.org/2003/06/sw-vocab-status/ns#>. 
@prefix owl: <http://www.w3.org/2002/07/owl#>.  
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.    
@prefix wot: <http://xmlns.com/wot/0.1/>.
@prefix xml: <http://www.w3.org/XML/1998/namespace>.  
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.  
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.  
@prefix skos:<http://www.w3.org/2004/02/skos/core#>.
@prefix terms: <http://purl.org/dc/terms/>.
@prefix time: <http://www.w3.org/2006/time#> .
@prefix fno: <http://semweb.datasciencelab.be/ns/function#> .
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix marl: <http://purl.org/marl/ns#>.
  
  <#SingleAuthorMapping> a rr:TriplesMap ;
rml:logicalSource [
                 rml:source [
                         a carml:Stream;
                         carml:streamName "inputStream";
                 ];
                 rml:referenceFormulation ql:JSONPath;
                 rml:iterator "$"
         ];

  rr:subjectMap [
    rr:template "http://localhost/socialNetwork/model/SingleAuthor/{user.id}" ;
    rr:class foaf:Person

  ] ;
   rr:predicateObjectMap [
   rr:predicate rdfs:subClassOf;
    rr:objectMap [
      rr:parentTriplesMap <#AuthorMapping>;
    ] ;
  ];

  rr:predicateObjectMap [
   rr:predicate model:hasStatus;
    rr:objectMap [
      rml:reference "$.user.status";
       rr:datatype xsd:string ;
    ] ;
  ];
   rr:predicateObjectMap [
   rr:predicate model:hasConnectivityMetrics;
    rr:objectMap [
   rr:parentTriplesMap <#ConnectivityMetricsMapping>;
    ] ;
  ];
   rr:predicateObjectMap [
   rr:predicate model:hasActivityMetrics;
    rr:objectMap [
   rr:parentTriplesMap <#ActivityMetricsMapping>;
    ] ;
  ].
  
  
 <#AuthorMapping> a rr:TriplesMap ;
rml:logicalSource [
                 rml:source [
                         a carml:Stream;
                         carml:streamName "inputStream";
                 ];
                 rml:referenceFormulation ql:JSONPath;
                 rml:iterator "$"
         ];

  rr:subjectMap [
    rr:template "http://localhost/socialNetwork/model/Author/{user.id}" ;
 rr:class model:Author
  ] ;
 

  rr:predicateObjectMap [
   rr:predicate model:hasScreenName;
    rr:objectMap [
      rml:reference "$.user.name";
         rr:datatype xsd:string ;
    ] ;
  ];
   rr:predicateObjectMap [
   rr:predicate model:hasDescription;
    rr:objectMap [
      rml:reference "$.user.description";
         rr:datatype xsd:string ;
    ] ;
  ];
rr:predicateObjectMap [
   rr:predicate model:hasLocation;
    rr:objectMap [
      rml:reference "$.user.location";
         rr:datatype xsd:string ;
    ] ;
  ];
  rr:predicateObjectMap [
   rr:predicate model:hasEmail;
    rr:objectMap [
      rml:reference "$.user.email";
         rr:datatype xsd:string ;
    ] ;
  ];
  rr:predicateObjectMap [
   rr:predicate model:createdAt;
    rr:objectMap [
     rr:parentTriplesMap  <#AuthorCreationDateMapping>;
    ] ;
  ]; 
  rr:predicateObjectMap [
   rr:predicate model:hasLanguage;
    rr:objectMap [
      rml:reference "$.user.lang";
         rr:datatype xsd:string ;
    ] ;
  ].
  
 <#AuthorCreationDateMapping> a rr:TriplesMap ;
 rml:logicalSource [
                 rml:source [
                         a carml:Stream;
                         carml:streamName "inputStream";
                 ];
                 rml:referenceFormulation ql:JSONPath;
                 rml:iterator "$"
         ];
  rr:subjectMap [
    rr:template "http://www.w3.org/2006/time/{user.id}/GeneralDateTimeDescription" ;
  rr:class time:GeneralDateTimeDescription;
  ] ;
  rr:predicateObjectMap [
    rr:predicate time:year ;
    rr:objectMap [
    a fnml:FunctionMap ;
    fnml:functionValue [
      rml:logicalSource model:LogicalSource ;
      rr:subjectMap [
        rr:template "functionExec";
        rr:termType rr:BlankNode ;
        rr:class fno:Execution
      ] ;
      rr:predicateObjectMap
        [
          rr:predicate fno:executes ;
          rr:objectMap [
            rr:constant model:YearMappingFunction ;
          ]
        ] ,
        [
          rr:predicate model:intParameterA ;
          rr:objectMap [ rml:reference "$.user.createdAt" ]
        ] 
    ] ;
    rr:datatype xsd:integer ;
  ];];
  rr:predicateObjectMap [
    rr:predicate time:month ;
    rr:objectMap [
    a fnml:FunctionMap ;
    fnml:functionValue [
      rml:logicalSource model:LogicalSource ;
      rr:subjectMap [
        rr:template "functionExec";
        rr:termType rr:BlankNode ;
        rr:class fno:Execution
      ] ;
      rr:predicateObjectMap
        [
          rr:predicate fno:executes ;
          rr:objectMap [
            rr:constant model:MonthMappingFunction ;
          ]
        ] ,
        [
          rr:predicate model:intParameterA ;
          rr:objectMap [ rml:reference "$.user.createdAt" ]
        ] 
    ] ;
    rr:datatype xsd:integer ;
  ];];
  rr:predicateObjectMap [
    rr:predicate time:day ;
    rr:objectMap [
    a fnml:FunctionMap ;
    fnml:functionValue [
      rml:logicalSource model:LogicalSource ;
      rr:subjectMap [
        rr:template "functionExec";
        rr:termType rr:BlankNode ;
        rr:class fno:Execution
      ] ;
      rr:predicateObjectMap
        [
          rr:predicate fno:executes ;
          rr:objectMap [
            rr:constant model:DayMappingFunction ;
          ]
        ] ,
        [
          rr:predicate model:intParameterA ;
          rr:objectMap [ rml:reference "$.user.createdAt" ]
        ] 
    ] ;
    rr:datatype xsd:integer ;
  ];];
  rr:predicateObjectMap [
    rr:predicate time:hour ;
    rr:objectMap [
    a fnml:FunctionMap ;
    fnml:functionValue [
      rml:logicalSource model:LogicalSource ;
      rr:subjectMap [
        rr:template "functionExec";
        rr:termType rr:BlankNode ;
        rr:class fno:Execution
      ] ;
      rr:predicateObjectMap
        [
          rr:predicate fno:executes ;
          rr:objectMap [
            rr:constant model:HourMappingFunction ;
          ]
        ] ,
        [
          rr:predicate model:intParameterA ;
          rr:objectMap [ rml:reference "$.user.createdAt" ]
        ] 
    ] ;
    rr:datatype xsd:nonNegativeInteger ;
  ];];
  rr:predicateObjectMap [
    rr:predicate time:minute ;
    rr:objectMap [
    a fnml:FunctionMap ;
    fnml:functionValue [
      rml:logicalSource model:LogicalSource ;
      rr:subjectMap [
        rr:template "functionExec";
        rr:termType rr:BlankNode ;
        rr:class fno:Execution
      ] ;
      rr:predicateObjectMap
        [
          rr:predicate fno:executes ;
          rr:objectMap [
            rr:constant model:MinuteMappingFunction ;
          ]
        ] ,
        [
          rr:predicate model:intParameterA ;
          rr:objectMap [ rml:reference "$.user.createdAt" ]
        ] 
    ] ;
    rr:datatype xsd:decimal ;
  ];];
    rr:predicateObjectMap [
    rr:predicate time:second ;
    rr:objectMap [
    a fnml:FunctionMap ;
    fnml:functionValue [
      rml:logicalSource model:LogicalSource ;
      rr:subjectMap [
        rr:template "functionExec";
        rr:termType rr:BlankNode ;
        rr:class fno:Execution
      ] ;
      rr:predicateObjectMap
        [
          rr:predicate fno:executes ;
          rr:objectMap [
            rr:constant model:SecondMappingFunction ;
          ]
        ] ,
        [
          rr:predicate model:intParameterA ;
          rr:objectMap [ rml:reference "$.user.createdAt" ]
        ] 
    ] ;
    rr:datatype xsd:decimal ;
  ];].
  

  
 <#ConnectivityMetricsMapping> a rr:TriplesMap ;
rml:logicalSource [
                 rml:source [
                         a carml:Stream;
                         carml:streamName "inputStream";
                 ];
                 rml:referenceFormulation ql:JSONPath;
                 rml:iterator "$"
         ];

  rr:subjectMap [
    rr:template "http://localhost/socialNetwork/model/{user.id}/ConnectivityMetrics" ;
 rr:class model:ConnectivityMetrics
  ] ;
   rr:predicateObjectMap [
   rr:predicate model:friendsCount;
    rr:objectMap [
     rml:reference "$.user.friendsCount";
      rr:datatype xsd:nonNegativeInteger;
    ] ;
  ];
  rr:predicateObjectMap [
   rr:predicate model:followersCount;
    rr:objectMap [
      rml:reference "$.user.followersCount";
       rr:datatype xsd:nonNegativeInteger;
    ] ;
  ] .
   <#ActivityMetricsMapping> a rr:TriplesMap ;
rml:logicalSource [
                 rml:source [
                         a carml:Stream;
                         carml:streamName "inputStream";
                 ];
                 rml:referenceFormulation ql:JSONPath;
                 rml:iterator "$"
         ];

  rr:subjectMap [
    rr:template "http://localhost/socialNetwork/model/{user.id}/ActivityMetrics" ;
 rr:class model:ActivityMetrics
  ] ;
   rr:predicateObjectMap [
   rr:predicate model:publicationCount;
    rr:objectMap [
     rml:reference "$.user.statusesCount";
      rr:datatype xsd:nonNegativeInteger;
    ] ;
 ];
  rr:predicateObjectMap [
   rr:predicate model:subscriptionsCount;
    rr:objectMap [
     rml:reference "$.user.listedCount";
      rr:datatype xsd:nonNegativeInteger;
    ] ;
 ];
  rr:predicateObjectMap [
   rr:predicate model:likesCount;
    rr:objectMap [
     rml:reference "$.user.favourites_count";
      rr:datatype xsd:nonNegativeInteger;
    ] ;
 ].
 
     
   <#FirstAuthorMapping> a rr:TriplesMap ;
rml:logicalSource [
                 rml:source [
                         a carml:Stream;
                         carml:streamName "inputStream";
                 ];
                 rml:referenceFormulation ql:JSONPath;
                 rml:iterator "$"
         ];
  rr:subjectMap [
    rr:template "http://localhost/socialNetwork/model/SingleAuthor/{retweetedStatus.user.id}" ;
    rr:class foaf:Person

  ] ;
   rr:predicateObjectMap [
   rr:predicate rdfs:subClassOf;
    rr:objectMap [
      rr:parentTriplesMap <#OriginalAuthorMapping>;
    ] ;
  ];

  rr:predicateObjectMap [
   rr:predicate model:hasStatus;
    rr:objectMap [
      rml:reference "$.retweetedStatus.user.status";
       rr:datatype xsd:string ;
    ] ;
  ];
   rr:predicateObjectMap [
   rr:predicate model:hasConnectivityMetrics;
    rr:objectMap [
   rr:parentTriplesMap <#OriginalConnectivityMetricsMapping>;
    ] ;
  ];
   rr:predicateObjectMap [
   rr:predicate model:hasActivityMetrics;
    rr:objectMap [
   rr:parentTriplesMap <#OriginalActivityMetricsMapping>;
    ] ;
  ].
  
   <#OriginalAuthorMapping> a rr:TriplesMap ;
 rml:logicalSource [
	rml:source "/home/franz/eclipse_projects/SNOWLApplication/src/main/resources/data/tweet.json";
    rml:referenceFormulation ql:JSONPath;
      rml:iterator "$"
    ];

  rr:subjectMap [
    rr:template "http://localhost/socialNetwork/model/Author/{retweetedStatus.user.id}" ;
rr:class model:Author
  ] ;
 
rr:predicateObjectMap [
   rr:predicate foaf:OnlineAccount;
    rr:objectMap [
      rml:reference "$.retweetedStatus.user.screenName";
         rr:datatype xsd:string ;
    ] ;
  ]; 
  rr:predicateObjectMap [
   rr:predicate model:hasScreenName;
    rr:objectMap [
      rml:reference "$.retweetedStatus.user.name";
         rr:datatype xsd:string ;
    ] ;
  ];
   rr:predicateObjectMap [
   rr:predicate model:hasDescription;
    rr:objectMap [
      rml:reference "$.retweetedStatus.user.description";
         rr:datatype xsd:string ;
    ] ;
  ];
rr:predicateObjectMap [
   rr:predicate model:hasLocation;
    rr:objectMap [
      rml:reference "$.retweetedStatus.user.location";
         rr:datatype xsd:string ;
    ] ;
  ];
  rr:predicateObjectMap [
   rr:predicate model:hasEmail;
    rr:objectMap [
      rml:reference "$.retweetedStatus.user.email";
         rr:datatype xsd:string ;
    ] ;
  ];
   rr:predicateObjectMap [
   rr:predicate model:createdAt;
    rr:objectMap [
      rr:parentTriplesMap <#OriginalAuthorCreationDateMapping>;
    ] ;
  ];
  rr:predicateObjectMap [
   rr:predicate model:hasLanguage;
    rr:objectMap [
      rml:reference "$.retweetedStatus.user.lang";
         rr:datatype xsd:string ;
    ] ;
  ].
  
  <#OriginalAuthorCreationDateMapping> a rr:TriplesMap ;
 rml:logicalSource [
                 rml:source [
                         a carml:Stream;
                         carml:streamName "inputStream";
                 ];
                 rml:referenceFormulation ql:JSONPath;
                 rml:iterator "$"
         ];
  rr:subjectMap [
    rr:template "http://www.w3.org/2006/time/{user.id}/GeneralDateTimeDescription" ;
  rr:class time:GeneralDateTimeDescription;
  ] ;
  rr:predicateObjectMap [
    rr:predicate time:year ;
    rr:objectMap [
    a fnml:FunctionMap ;
    fnml:functionValue [
      rml:logicalSource model:LogicalSource ;
      rr:subjectMap [
        rr:template "functionExec";
        rr:termType rr:BlankNode ;
        rr:class fno:Execution
      ] ;
      rr:predicateObjectMap
        [
          rr:predicate fno:executes ;
          rr:objectMap [
            rr:constant model:YearMappingFunction ;
          ]
        ] ,
        [
          rr:predicate model:intParameterA ;
          rr:objectMap [ rml:reference "$.retweetedStatus.user.createdAt" ]
        ] 
    ] ;
    rr:datatype xsd:integer ;
  ];];
  rr:predicateObjectMap [
    rr:predicate time:month ;
    rr:objectMap [
    a fnml:FunctionMap ;
    fnml:functionValue [
      rml:logicalSource model:LogicalSource ;
      rr:subjectMap [
        rr:template "functionExec";
        rr:termType rr:BlankNode ;
        rr:class fno:Execution
      ] ;
      rr:predicateObjectMap
        [
          rr:predicate fno:executes ;
          rr:objectMap [
            rr:constant model:MonthMappingFunction ;
          ]
        ] ,
        [
          rr:predicate model:intParameterA ;
          rr:objectMap [ rml:reference "$.retweetedStatus.user.createdAt" ]
        ] 
    ] ;
    rr:datatype xsd:integer ;
  ];];
  rr:predicateObjectMap [
    rr:predicate time:day ;
    rr:objectMap [
    a fnml:FunctionMap ;
    fnml:functionValue [
      rml:logicalSource model:LogicalSource ;
      rr:subjectMap [
        rr:template "functionExec";
        rr:termType rr:BlankNode ;
        rr:class fno:Execution
      ] ;
      rr:predicateObjectMap
        [
          rr:predicate fno:executes ;
          rr:objectMap [
            rr:constant model:DayMappingFunction ;
          ]
        ] ,
        [
          rr:predicate model:intParameterA ;
          rr:objectMap [ rml:reference "$.retweetedStatus.user.createdAt" ]
        ] 
    ] ;
    rr:datatype xsd:integer ;
  ];];
  rr:predicateObjectMap [
    rr:predicate time:hour ;
    rr:objectMap [
    a fnml:FunctionMap ;
    fnml:functionValue [
      rml:logicalSource model:LogicalSource ;
      rr:subjectMap [
        rr:template "functionExec";
        rr:termType rr:BlankNode ;
        rr:class fno:Execution
      ] ;
      rr:predicateObjectMap
        [
          rr:predicate fno:executes ;
          rr:objectMap [
            rr:constant model:HourMappingFunction ;
          ]
        ] ,
        [
          rr:predicate model:intParameterA ;
          rr:objectMap [ rml:reference "$.retweetedStatus.user.createdAt" ]
        ] 
    ] ;
    rr:datatype xsd:nonNegativeInteger ;
  ];];
  rr:predicateObjectMap [
    rr:predicate time:minute ;
    rr:objectMap [
    a fnml:FunctionMap ;
    fnml:functionValue [
      rml:logicalSource model:LogicalSource ;
      rr:subjectMap [
        rr:template "functionExec";
        rr:termType rr:BlankNode ;
        rr:class fno:Execution
      ] ;
      rr:predicateObjectMap
        [
          rr:predicate fno:executes ;
          rr:objectMap [
            rr:constant model:MinuteMappingFunction ;
          ]
        ] ,
        [
          rr:predicate model:intParameterA ;
          rr:objectMap [ rml:reference "$.retweetedStatus.user.createdAt" ]
        ] 
    ] ;
    rr:datatype xsd:decimal ;
  ];];
    rr:predicateObjectMap [
    rr:predicate time:second ;
    rr:objectMap [
    a fnml:FunctionMap ;
    fnml:functionValue [
      rml:logicalSource model:LogicalSource ;
      rr:subjectMap [
        rr:template "functionExec";
        rr:termType rr:BlankNode ;
        rr:class fno:Execution
      ] ;
      rr:predicateObjectMap
        [
          rr:predicate fno:executes ;
          rr:objectMap [
            rr:constant model:SecondMappingFunction ;
          ]
        ] ,
        [
          rr:predicate model:intParameterA ;
          rr:objectMap [ rml:reference "$.retweetedStatus.user.createdAt" ]
        ] 
    ] ;
    rr:datatype xsd:decimal ;
  ];].
  
  <#OriginalConnectivityMetricsMapping> a rr:TriplesMap ;
rml:logicalSource [
                 rml:source [
                         a carml:Stream;
                         carml:streamName "inputStream";
                 ];
                 rml:referenceFormulation ql:JSONPath;
                 rml:iterator "$"
         ];
  rr:subjectMap [
    rr:template "http://localhost/socialNetwork/model/{retweetedStatus.user.id}/ConnectivityMetrics" ;
rr:class model:ConnectivityMetrics;
  ] ;
   rr:predicateObjectMap [
   rr:predicate model:friendsCount;
    rr:objectMap [
     rml:reference "$.retweetedStatus.user.friendsCount";
       rr:datatype xsd:nonNegativeInteger;
    ] ;
  ];
  rr:predicateObjectMap [
   rr:predicate model:followersCount;
    rr:objectMap [
      rml:reference "$.retweetedStatus.user.followersCount";
        rr:datatype xsd:nonNegativeInteger;
    ] ;
  ] .

   <#OriginalActivityMetricsMapping> a rr:TriplesMap ;
rml:logicalSource [
                 rml:source [
                         a carml:Stream;
                         carml:streamName "inputStream";
                 ];
                 rml:referenceFormulation ql:JSONPath;
                 rml:iterator "$"
         ];

  rr:subjectMap [
    rr:template "http://localhost/socialNetwork/model/{retweetedStatus.user.id}/ActivityMetrics" ;
rr:class model:ActivityMetrics;
  ] ;
   rr:predicateObjectMap [
   rr:predicate model:publicationCount;
    rr:objectMap [
     rml:reference "$.retweetedStatus.user.statusesCount";
    ] ;
 ];
  rr:predicateObjectMap [
   rr:predicate model:subscriptionsCount;
    rr:objectMap [
     rml:reference "$.retweetedStatus.user.listedCount";
       rr:datatype xsd:nonNegativeInteger;
    ] ;
 ];
  rr:predicateObjectMap [
   rr:predicate model:likesCount;
    rr:objectMap [
     rml:reference "$.retweetedStatus.user.favourites_count";
       rr:datatype xsd:nonNegativeInteger;
    ] ;
 ].
 
  
